


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: Xinyuan Pan & Chimezie Iwuanyanwu
    3 00000000         ; Last modification date: 3/29
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   23 00000000         ; Output a 32-bit number in unsigned decimal format
   24 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   25 00000000         ; Output: none
   26 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   27 00000000         LCD_OutDec
   28 00000000 00000000 
                       string  EQU              0           ;maximum value has 
                                                            10 digits, so 10 by
                                                            tes 
   29 00000000         ; from lower address to higher address, lower digit to h
                       igher digit
   30 00000000 B570            PUSH             {R4, R5, R6, LR}
   31 00000002 B084            SUB              SP, #16     ; need to be multip
                                                            le of 4, so the ext
                                                            ra 2 bytes are usel
                                                            ess
   32 00000004 4601            MOV              R1, R0      ; R1 stores the num
                                                            ber to be converted
                                                            
   33 00000006 F04F 0300       MOV              R3, #0      ; R3 offsets the st
                                                            ring
   34 0000000A F04F 060A       MOV              R6, #10     ; used for division
                                                             and mul
   35 0000000E         ; get the lowest digit and convert to ASCII
   36 0000000E         numtostr
   37 0000000E FBB1 F4F6       UDIV             R4, R1, R6
   38 00000012 FB04 F506       MUL              R5, R4, R6
   39 00000016 EBA1 0205       SUB              R2, R1, R5  ; the remainder in 
                                                            R2, which is the lo
                                                            west digit
   40 0000001A 4621            MOV              R1, R4      ; put the number le
                                                            ft into R1



ARM Macro Assembler    Page 2 


   41 0000001C F102 0230       ADD              R2, #0x30   ; convert R2 to ASC
                                                            II value
   42 00000020         ; now put R2 to the corresponding place in stack
   43 00000020 F80D 2003       STRB             R2, [SP,R3]
   44 00000024         ; increment R3
   45 00000024 F103 0301       ADD              R3,#1
   46 00000028         ; if R1 = 0 then we've done converting the number to str
                       ing
   47 00000028 2900            CMP              R1, #0
   48 0000002A D1F0            BNE              numtostr
   49 0000002C         
   50 0000002C         ; start printing now
   51 0000002C         ; print from higher address to lower address
   52 0000002C         
   53 0000002C         print
   54 0000002C F1A3 0301       SUB              R3, #1      ; must minus first!
                                                            !! 
   55 00000030 F81D 0003       LDRB             R0, [SP, R3] ;only get 1 byte (
                                                            the other locations
                                                             are empty anyways,
                                                             since it's a char)
                                                            
   56 00000034 B418            PUSH             {R3,R4}     ; have to do this, 
                                                            cuz inside that fun
                                                            ction it doesnt sav
                                                            e R3
   57 00000036 F7FF FFFE       BL               ST7735_OutChar
   58 0000003A BC18            POP              {R3,R4}
   59 0000003C 2B00            CMP              R3, #0
   60 0000003E D1F5            BNE              print
   61 00000040         ; if R3 is 0, then done printing
   62 00000040 B004            ADD              SP, #16
   63 00000042 E8BD 4070       POP              {R4, R5, R6, LR}
   64 00000046 4770            BX               LR
   65 00000048         
   66 00000048         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   67 00000048         
   68 00000048         
   69 00000048         
   70 00000048         ; -----------------------LCD _OutFix--------------------
                       --
   71 00000048         ; Output characters to LCD display in fixed-point format
                       
   72 00000048         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   73 00000048         ; Inputs:  R0 is an unsigned 32-bit number
   74 00000048         ; Outputs: none
   75 00000048         ; E.g., R0=0,    then output "0.000 "
   76 00000048         ;       R0=3,    then output "0.003 "
   77 00000048         ;       R0=89,   then output "0.089 "
   78 00000048         ;       R0=123,  then output "0.123 "
   79 00000048         ;       R0=9999, then output "9.999 "
   80 00000048         ;       R0>9999, then output "*.*** "
   81 00000048         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   82 00000048         LCD_OutFix
   83 00000048 00000000 
                       char1   EQU              0
   84 00000048 00000001 



ARM Macro Assembler    Page 3 


                       dec     EQU              1
   85 00000048 00000002 
                       char2   EQU              2
   86 00000048 00000003 
                       char3   EQU              3
   87 00000048 00000004 
                       char4   EQU              4
   88 00000048 0000002E 
                       dot     EQU              0x2E
   89 00000048 0000002A 
                       ast     EQU              0x2A
   90 00000048 B570            PUSH             {R4, R5, R6, LR}
   91 0000004A B082            SUB              SP, #8
   92 0000004C         ; the case that number is >9999
   93 0000004C F242 730F       MOV              R3, #9999
   94 00000050 4298            CMP              R0, R3
   95 00000052 D832            BHI              aboveRange
   96 00000054         
   97 00000054 F04F 060A       MOV              R6, #10     ; used for division
                                                            
   98 00000058         
   99 00000058 FBB0 F1F6       UDIV             R1, R0, R6
  100 0000005C FB01 F406       MUL              R4, R1, R6
  101 00000060 EBA0 0204       SUB              R2, R0, R4  ; R2 is the remaind
                                                            er
  102 00000064 4608            MOV              R0, R1      ; update R0
  103 00000066 F102 0230       ADD              R2, #0x30
  104 0000006A F88D 2004       STRB             R2, [SP, #char4]
  105 0000006E         
  106 0000006E FBB0 F1F6       UDIV             R1, R0, R6
  107 00000072 FB01 F406       MUL              R4, R1, R6
  108 00000076 EBA0 0204       SUB              R2, R0, R4  ; R2 is the remaind
                                                            er
  109 0000007A 4608            MOV              R0, R1      ; update R0
  110 0000007C F102 0230       ADD              R2, #0x30
  111 00000080 F88D 2003       STRB             R2, [SP, #char3]
  112 00000084         
  113 00000084 FBB0 F1F6       UDIV             R1, R0, R6
  114 00000088 FB01 F406       MUL              R4, R1, R6
  115 0000008C EBA0 0204       SUB              R2, R0, R4  ; R2 is the remaind
                                                            er
  116 00000090 4608            MOV              R0, R1      ; update R0
  117 00000092 F102 0230       ADD              R2, #0x30
  118 00000096 F88D 2002       STRB             R2, [SP, #char2]
  119 0000009A         
  120 0000009A F04F 022E       MOV              R2, #dot
  121 0000009E F88D 2001       STRB             R2, [SP, #dec]
  122 000000A2         
  123 000000A2 FBB0 F1F6       UDIV             R1, R0, R6
  124 000000A6 FB01 F406       MUL              R4, R1, R6
  125 000000AA EBA0 0204       SUB              R2, R0, R4  ; R2 is the remaind
                                                            er
  126 000000AE 4608            MOV              R0, R1      ; update R1
  127 000000B0 F102 0230       ADD              R2, #0x30
  128 000000B4 F88D 2000       STRB             R2, [SP, #char1]
  129 000000B8 E00D            B                print2
  130 000000BA         
  131 000000BA         aboveRange
  132 000000BA F04F 022A       MOV              R2, #ast



ARM Macro Assembler    Page 4 


  133 000000BE F88D 2000       STRB             R2, [SP,#char1]
  134 000000C2 F88D 2002       STRB             R2, [SP,#char2]
  135 000000C6 F88D 2003       STRB             R2, [SP,#char3]
  136 000000CA F88D 2004       STRB             R2, [SP,#char4]
  137 000000CE F04F 022E       MOV              R2, #dot
  138 000000D2 F88D 2001       STRB             R2, [SP,#dec]
  139 000000D6         
  140 000000D6         print2
  141 000000D6 F89D 0000       LDRB             R0, [SP,#char1]
  142 000000DA F7FF FFFE       BL               ST7735_OutChar
  143 000000DE F89D 0001       LDRB             R0, [SP,#dec]
  144 000000E2 F7FF FFFE       BL               ST7735_OutChar
  145 000000E6 F89D 0002       LDRB             R0, [SP,#char2]
  146 000000EA F7FF FFFE       BL               ST7735_OutChar
  147 000000EE F89D 0003       LDRB             R0, [SP,#char3]
  148 000000F2 F7FF FFFE       BL               ST7735_OutChar
  149 000000F6 F89D 0004       LDRB             R0, [SP,#char4]
  150 000000FA F7FF FFFE       BL               ST7735_OutChar
  151 000000FE         
  152 000000FE B002            ADD              SP, #8
  153 00000100 E8BD 4070       POP              {R4, R5, R6, LR}
  154 00000104 4770            BX               LR
  155 00000106         
  156 00000106         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  157 00000106         
  158 00000106 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  159 00000108                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__RTX SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 27 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000048

Symbol: LCD_OutFix
   Definitions
      At line 82 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
aboveRange 000000BA

Symbol: aboveRange
   Definitions
      At line 131 in file Print.s
   Uses
      At line 95 in file Print.s
Comment: aboveRange used once
numtostr 0000000E

Symbol: numtostr
   Definitions
      At line 36 in file Print.s
   Uses
      At line 48 in file Print.s
Comment: numtostr used once
print 0000002C

Symbol: print
   Definitions
      At line 53 in file Print.s
   Uses
      At line 60 in file Print.s
Comment: print used once
print2 000000D6

Symbol: print2
   Definitions
      At line 140 in file Print.s
   Uses
      At line 129 in file Print.s
Comment: print2 used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ast 0000002A

Symbol: ast
   Definitions
      At line 89 in file Print.s
   Uses
      At line 132 in file Print.s
Comment: ast used once
char1 00000000

Symbol: char1
   Definitions
      At line 83 in file Print.s
   Uses
      At line 128 in file Print.s
      At line 133 in file Print.s
      At line 141 in file Print.s

char2 00000002

Symbol: char2
   Definitions
      At line 85 in file Print.s
   Uses
      At line 118 in file Print.s
      At line 134 in file Print.s
      At line 145 in file Print.s

char3 00000003

Symbol: char3
   Definitions
      At line 86 in file Print.s
   Uses
      At line 111 in file Print.s
      At line 135 in file Print.s
      At line 147 in file Print.s

char4 00000004

Symbol: char4
   Definitions
      At line 87 in file Print.s
   Uses
      At line 104 in file Print.s
      At line 136 in file Print.s
      At line 149 in file Print.s

dec 00000001

Symbol: dec
   Definitions
      At line 84 in file Print.s
   Uses
      At line 121 in file Print.s
      At line 138 in file Print.s
      At line 143 in file Print.s

dot 0000002E



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: dot
   Definitions
      At line 88 in file Print.s
   Uses
      At line 120 in file Print.s
      At line 137 in file Print.s

string 00000000

Symbol: string
   Definitions
      At line 28 in file Print.s
   Uses
      None
Comment: string unused
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 57 in file Print.s
      At line 142 in file Print.s
      At line 144 in file Print.s
      At line 146 in file Print.s
      At line 148 in file Print.s
      At line 150 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
348 symbols in table
